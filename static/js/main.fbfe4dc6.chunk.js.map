{"version":3,"sources":["data.js","components/GoodsList.js","components/Select.js","components/ButtonsBlock.js","App.js","index.js"],"names":["goodsFromServer","GoodsList","items","className","map","item","key","id","value","Select","selectedValue","handleSelect","onChange","ButtonsBlock","props","clickReverseList","clickSortList","clickSortByLength","clickReset","type","onClick","formatedGoods","goods","index","App","baseGoods","state","isListShown","selected","showList","setState","reversList","reverse","sortList","sort","itemA","itemB","localeCompare","reset","sortByLength","length","event","selectedLength","Number","target","filter","this","hidden","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oOAAaA,G,MAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WCYaC,EAnBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,wBAAIC,UAAU,aAEVD,EAAME,KAAI,SAAAC,GAAI,OACZ,wBAAIC,IAAKD,EAAKE,IACXF,EAAKG,YCkBDC,EAvBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,aAAlB,OACb,4BACEH,MAAOE,EACPE,SAAUD,GAGR,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIP,KAAI,SAAAI,GAAK,OACvC,4BACEF,IAAKE,EACLA,MAAOA,GAENA,QCqCIK,EAhDM,SAACC,GAAW,IAE7BC,EAIED,EAJFC,iBACAC,EAGEF,EAHFE,cACAC,EAEEH,EAFFG,kBACAC,EACEJ,EADFI,WAGF,OACE,oCACE,4BACEC,KAAK,SACLC,QAASL,GAFX,WAOA,4BACEI,KAAK,SACLC,QAASJ,GAFX,QAOA,4BACEG,KAAK,SACLC,QAASH,GAFX,eAOA,4BACEE,KAAK,SACLC,QAASF,GAFX,WC3BAG,EAAgB,SAAAC,GAAK,OACzBA,EAAMlB,KAAI,SAACC,EAAMkB,GAAP,MAAkB,CAC1BhB,GAAIgB,EAAOf,MAAOH,OAmGPmB,E,4MA9FbC,UAAYJ,EAAcrB,G,EAE1B0B,MAAQ,CACNJ,MAAM,YAAK,EAAKG,WAChBE,aAAa,EACbC,SAAU,G,EAGZC,SAAW,WACT,EAAKC,SAAS,CACZH,aAAa,K,EAIjBI,WAAa,WACX,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBJ,MAAO,YAAII,EAAMJ,OAAOU,e,EAI5BC,SAAW,WACT,EAAKH,UAAS,SAAAJ,GAAK,MAAK,CACtBJ,MAAO,YAAII,EAAMJ,OAAOY,MAAK,SAACC,EAAOC,GAAR,OAC3BD,EAAM3B,MAAM6B,cAAcD,EAAM5B,e,EAKtC8B,MAAQ,WACN,EAAKR,UAAS,iBAAO,CACnBR,MAAM,YAAK,EAAKG,WAChBG,SAAU,O,EAIdW,aAAe,WACb,EAAKT,UAAS,SAAAJ,GAAK,MAAK,CACtBJ,MAAO,YAAII,EAAMJ,OAAOY,MAAK,SAACC,EAAOC,GAAR,OAC3BD,EAAM3B,MAAMgC,OAASJ,EAAM5B,MAAMgC,e,EAKvC7B,aAAe,SAAC8B,GACd,IAAMC,EAAiBC,OAAOF,EAAMG,OAAOpC,OAE3C,EAAKsB,UAAS,iBAAO,CACnBR,MAAO,YAAI,EAAKG,WAAWoB,QAAO,SAAAxC,GAAI,OACpCA,EAAKG,MAAMgC,QAAUE,KAEvBd,SAAUc,O,uDAIJ,IAAD,EACwBI,KAAKpB,MAA5BC,EADD,EACCA,YAAaL,EADd,EACcA,MAErB,OACE,yBAAKnB,UAAU,OACb,4BAAQA,UAAU,UAChB,4BACEgB,KAAK,SACLC,QAAS0B,KAAKjB,SACdkB,OAAQpB,GAHV,SAQCA,GACC,kBAAC,EAAD,CACEZ,iBAAkB+B,KAAKf,WACvBf,cAAe8B,KAAKb,SACpBhB,kBAAmB6B,KAAKP,aACxBrB,WAAY4B,KAAKR,SAKtBX,GAAe,kBAAC,EAAD,CAAWzB,MAAOoB,IAEjCK,GACC,4BAAQxB,UAAU,UAChB,uDACA,kBAAC,EAAD,CACEO,cAAeoC,KAAKpB,MAAME,SAC1BjB,aAAcmC,KAAKnC,qB,GAtFfqC,IAAMC,WCTxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fbfe4dc6.chunk.js","sourcesContent":["export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GoodsList = ({ items }) => (\n  <ul className=\"GoodsList\">\n    {\n      items.map(item => (\n        <li key={item.id}>\n          {item.value}\n        </li>\n      ))\n    }\n  </ul>\n);\n\nGoodsList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    value: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nexport default GoodsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Select = ({ selectedValue, handleSelect }) => (\n  <select\n    value={selectedValue}\n    onChange={handleSelect}\n  >\n    {\n      [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(value => (\n        <option\n          key={value}\n          value={value}\n        >\n          {value}\n        </option>\n      ))\n    }\n  </select>\n);\n\nSelect.propTypes = {\n  selectedValue: PropTypes.number.isRequired,\n  handleSelect: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ButtonsBlock = (props) => {\n  const {\n    clickReverseList,\n    clickSortList,\n    clickSortByLength,\n    clickReset,\n  } = props;\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        onClick={clickReverseList}\n      >\n        Reverse\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={clickSortList}\n      >\n        Sort\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={clickSortByLength}\n      >\n        Sort Length\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={clickReset}\n      >\n        Reset\n      </button>\n    </>\n  );\n};\n\nButtonsBlock.propTypes = {\n  clickReverseList: PropTypes.func.isRequired,\n  clickSortList: PropTypes.func.isRequired,\n  clickSortByLength: PropTypes.func.isRequired,\n  clickReset: PropTypes.func.isRequired,\n};\n\nexport default ButtonsBlock;\n","import React from 'react';\nimport './App.css';\nimport { goodsFromServer } from './data';\nimport GoodsList from './components/GoodsList';\nimport Select from './components/Select';\nimport ButtonsBlock from './components/ButtonsBlock';\n\nconst formatedGoods = goods => (\n  goods.map((item, index) => ({\n    id: index, value: item,\n  }))\n);\n\nclass App extends React.Component {\n  baseGoods = formatedGoods(goodsFromServer);\n\n  state = {\n    goods: [...this.baseGoods],\n    isListShown: false,\n    selected: 1,\n  }\n\n  showList = () => {\n    this.setState({\n      isListShown: true,\n    });\n  }\n\n  reversList = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  }\n\n  sortList = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((itemA, itemB) => (\n        itemA.value.localeCompare(itemB.value)\n      )),\n    }));\n  }\n\n  reset = () => {\n    this.setState(() => ({\n      goods: [...this.baseGoods],\n      selected: 1,\n    }));\n  }\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods].sort((itemA, itemB) => (\n        itemA.value.length - itemB.value.length\n      )),\n    }));\n  }\n\n  handleSelect = (event) => {\n    const selectedLength = Number(event.target.value);\n\n    this.setState(() => ({\n      goods: [...this.baseGoods].filter(item => (\n        item.value.length >= selectedLength\n      )),\n      selected: selectedLength,\n    }));\n  }\n\n  render() {\n    const { isListShown, goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <header className=\"header\">\n          <button\n            type=\"button\"\n            onClick={this.showList}\n            hidden={isListShown}\n          >\n            Start\n          </button>\n\n          {isListShown && (\n            <ButtonsBlock\n              clickReverseList={this.reversList}\n              clickSortList={this.sortList}\n              clickSortByLength={this.sortByLength}\n              clickReset={this.reset}\n            />\n          )}\n        </header>\n\n        {isListShown && <GoodsList items={goods} />}\n\n        {isListShown && (\n          <footer className=\"footer\">\n            <span>Select length of item</span>\n            <Select\n              selectedValue={this.state.selected}\n              handleSelect={this.handleSelect}\n            />\n          </footer>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}